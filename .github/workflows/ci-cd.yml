name: CI/CD Pipeline

on:
  push:
    branches: [ main ] # develop 브랜치 제거로 사용량 절약
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 수동 실행 가능하도록 추가

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: cocoai-60a2d

jobs:
  # 통합된 코드 검사 및 빌드 (사용량 절약)
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # Firebase 자동 배포 비활성화 - 수동 배포로 전환
  deploy:
    name: Deploy to Firebase (Manual Only)
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: false  # 자동 배포 완전 비활성화
    steps:
      - name: Manual Deployment Notice
        run: |
          echo "🚨 Firebase 자동 배포가 비활성화되었습니다."
          echo "📋 수동 배포 방법:"
          echo "1. 로컬에서 'firebase login' 실행"
          echo "2. 'firebase use cocoai-60a2d' 실행"
          echo "3. 'firebase deploy --only hosting' 실행"
          echo "또는 프로젝트 루트에서 './deploy.bat' (Windows) 또는 './deploy.sh' (Linux/Mac) 실행"

  # 보안 스캔 (수동 실행만 - 사용량 절약)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # 수동 실행시에만
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate
