name: CI/CD Pipeline

on:
  push:
    branches: [ main ] # develop 브랜치 제거로 사용량 절약
  pull_request:
    branches: [ main ]
  workflow_dispatch: # 수동 실행 가능하도록 추가

env:
  NODE_VERSION: '18'
  FIREBASE_PROJECT_ID: cocoai-60a2d

jobs:
  # 통합된 코드 검사 및 빌드 (사용량 절약)
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  # Firebase 자동 배포 - GitHub Token 방식 (권한 문제 해결)
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # main 브랜치 push시에만 자동 배포
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify build artifacts
        run: |
          echo "📦 빌드 아티팩트 확인 중..."
          ls -la dist/
          if [ ! -f "dist/index.html" ]; then
            echo "❌ 빌드 아티팩트가 올바르지 않습니다."
            exit 1
          fi
          echo "✅ 빌드 아티팩트 확인 완료"

      - name: Setup Firebase CLI
        run: |
          npm install -g firebase-tools@latest
          firebase --version

      - name: Deploy to Firebase Hosting (Token 방식)
        run: |
          if [ -n "${{ secrets.FIREBASE_TOKEN }}" ]; then
            echo "🔑 Firebase Token을 사용한 배포 시작..."
            firebase deploy --only hosting --project ${{ env.FIREBASE_PROJECT_ID }} --token "${{ secrets.FIREBASE_TOKEN }}" --non-interactive
          else
            echo "❌ FIREBASE_TOKEN이 설정되지 않았습니다."
            echo "💡 Firebase CLI에서 'firebase login:ci' 명령어로 토큰을 생성하고 GitHub Secrets에 추가해주세요."
            exit 1
          fi

  # 보안 스캔 (수동 실행만 - 사용량 절약)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # 수동 실행시에만
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate
