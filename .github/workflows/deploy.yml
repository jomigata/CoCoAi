name: 🚀 CoCoAi 자동 배포

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # 코드 품질 검사
  quality-check:
    name: 🔍 코드 품질 검사
    runs-on: ubuntu-latest
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🟢 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 의존성 설치
        run: npm ci

      - name: 🔧 타입 검사
        run: npm run type-check

      - name: 🧹 린트 검사
        run: npm run lint

  # 빌드 및 테스트
  build-and-test:
    name: 🏗️ 빌드 및 테스트
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🟢 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 의존성 설치
        run: npm ci

      - name: 🏗️ 프로젝트 빌드
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: 📤 빌드 아티팩트 업로드
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  # Firebase Functions 배포
  deploy-functions:
    name: ⚡ Firebase Functions 배포
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🟢 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Functions 의존성 설치
        working-directory: ./functions
        run: npm ci

      - name: 🏗️ Functions 빌드
        working-directory: ./functions
        run: npm run build

      - name: 🔥 Firebase CLI 설치
        run: npm install -g firebase-tools

      - name: ⚡ Functions 배포
        run: firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_ID }}

  # Firebase Hosting 배포
  deploy-hosting:
    name: 🌐 Firebase Hosting 배포
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4

      - name: 📥 빌드 아티팩트 다운로드
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: 🔥 Firebase CLI 설치
        run: npm install -g firebase-tools

      - name: 🌐 Hosting 배포
        run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_ID }}

  # Firestore Rules 및 Indexes 배포
  deploy-firestore:
    name: 🗄️ Firestore Rules & Indexes 배포
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🔥 Firebase CLI 설치
        run: npm install -g firebase-tools

      - name: 🗄️ Firestore Rules & Indexes 배포
        run: firebase deploy --only firestore --token ${{ secrets.FIREBASE_TOKEN }}
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_ID }}

  # 배포 완료 알림
  notify-completion:
    name: 📢 배포 완료 알림
    runs-on: ubuntu-latest
    needs: [deploy-hosting, deploy-functions, deploy-firestore]
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📢 배포 상태 확인
        run: |
          echo "🚀 CoCoAi 배포 완료!"
          echo "✅ Hosting: ${{ needs.deploy-hosting.result }}"
          echo "⚡ Functions: ${{ needs.deploy-functions.result }}"
          echo "🗄️ Firestore: ${{ needs.deploy-firestore.result }}"
          
          if [ "${{ secrets.FIREBASE_TOKEN }}" = "" ]; then
            echo "⚠️ Firebase 토큰이 설정되지 않았습니다."
            echo "📋 GitHub Secrets에서 FIREBASE_TOKEN을 설정해주세요."
            echo "🔗 설정 링크: https://github.com/${{ github.repository }}/settings/secrets/actions"
          elif [ "${{ needs.deploy-hosting.result }}" = "success" ] && 
             [ "${{ needs.deploy-functions.result }}" = "success" ] && 
             [ "${{ needs.deploy-firestore.result }}" = "success" ]; then
            echo "🎉 모든 배포가 성공적으로 완료되었습니다!"
            echo "🌐 웹사이트: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          else
            echo "❌ 일부 배포에서 오류가 발생했습니다."
            echo "📊 상세 로그를 확인해주세요."
          fi
